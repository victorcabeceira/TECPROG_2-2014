Classe: 
	Métodos:
		Atributos:
PStateHit.h // Class that control the player if he is hit.
	enter: // Run in the beggining of the player state, should do initialization.
	exit: // Run in the end of the execution of the player state, should deallocate everything.
	handleInput // Is called 60 times per second, do the logic of the state.
	PStateHit // The Constructor, sets the player to the state.

PStateIdle.h // Class that control the player if he is idle.
	enter: // Run in the beggining of the player state, should do initialization.
	exit: // Run in the end of the execution of the player state, should deallocate everything.
	handleInput // Is called 60 times per second, do the logic of the state.
	PStateHit // The Constructor, sets the player to the state.

PStateMoving.h // Class that control the player if he is moving.
	enter: // Run in the beggining of the player state, should do initialization.
	exit: // Run in the end of the execution of the player state, should deallocate everything.
	handleInput // Is called 60 times per second, do the logic of the state.
	PStateHit // The Constructor, sets the player to the state.

PStateMovingCrouch.h // Class that control the player if he is moving while he is crouch.
	enter: // Run in the beggining of the player state, should do initialization.
	exit: // Run in the end of the execution of the player state, should deallocate everything.
	handleInput // Is called 60 times per second, do the logic of the state.
	PStateHit // The Constructor, sets the player to the state.

PStateROlling.h // Class that control the player if he is rolling.
	enter: // Run in the beggining of the player state, should do initialization.
	exit: // Run in the end of the execution of the player state, should deallocate everything.
	handleInput // Is called 60 times per second, do the logic of the state.
	PStateHit // The Constructor, sets the player to the state.
